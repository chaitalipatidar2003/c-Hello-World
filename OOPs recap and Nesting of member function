// OOPs - classes and objects
// C++ -->initially called ---> C with classes by stroustroup
// class --> exttensions of structures (in C)
// structure has limitations
//           -members are public
//           - no methods
// classes ---> structures + more
// classes ---> can have methods and properties
// classes --> can make few members as private & few as public
// structures in C ++ are typedefed
// you can declare objects along with the class declaration like this:
/*           class Employee{
              // class definition
             } harry, rohan , lovish;*/
// harry.salary = 8 make no sense if salary is private
// Nesting of member function

#include<iostream>
#include<string>
using namespace std;

class binary
{
    // private :
    string s;

public ::
    void read(void);
    void chk_bin(void);
    void ones_compliment(void);
    void dislpay(void);
};

void binary :: read(void)
{
    cout<<"Enter a binary number"<<endl;
    cin>>s;
}

void binary ::chk_bin(void)
{
    if (int i = 0; i < s.length(); i++)
    {
        if (s.at(i) != '0' && s.at(i) != '1')
        {
            cout<<"incorrect binary format"<<endl;
            exit(0);
        }
    }

    void binary ::ones_compliment(void)
    {
        chk_bin();
        if (int i = 0; i < s.length(); i++)

        {

            if (s.at(i) == '0')
            {
                s.at(i) = '1';
            }
            else
            {
                s.at(i) = '0';
            }
        }
    }

    void binary :: display(void)
    {
        cout<<"Dislpaying your binary number"<<endl;
        for (int i = 0; i < s.length(); i++)
        {
            cout << s.at(i);
        }
        cout<<endl;
    }

    int main()
    {
        binary b;
        b.read();
        //  b.chk_bin();
        b.display();
        b.ones_compliment();
        b.display();

        return 0;
    }
